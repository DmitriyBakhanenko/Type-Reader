{"version":3,"sources":["redux/user/user.types.ts","redux/user/user.actions.ts","redux/user/user.selectors.ts","components/spinner.component.tsx","components/Login.component.tsx","components/Create.component.tsx","redux/progress/progress.types.ts","redux/progress/progress.actions.ts","redux/progress/progress.selectors.ts","components/custom-button.component.tsx","components/Menu.component.tsx","components/Reading.component.tsx","App.tsx","redux/progress/progress.reducer.ts","redux/user/user.reducer.ts","redux/root_reducer.ts","redux/progress/progress.sagas.ts","firebase/firebase.ts","redux/user/user.sagas.ts","redux/root_saga.ts","redux/store.ts","index.tsx"],"names":["userActionsTypes","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","FACEBOOK_SIGN_IN_START","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CHECK_USER_SESSION_START","CHECK_USER_SESSION_FINISH","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signInFailure","error","type","payload","checkUserSessionFinish","selectUser","state","user","selectCurrentUser","createSelector","currentUser","userAuthificationLoaded","isLoading","Spinner","className","Login","useState","email","setEmail","password","setPassword","hiddenEmail","setHiddenEmail","hiddenPwd","setHiddenPwd","shifr","setShifr","cursorEvent","useRef","refEmailContainer","refPwdContainer","refEmailInput","refPwdInput","dispatch","useDispatch","useSelector","useEffect","current","focus","handleClick","e","target","repeat","length","document","activeElement","ReactDOM","findDOMNode","setInterval","clearInterval","Fragment","href","ref","onClick","style","visibility","required","autoComplete","minLength","onChange","value","to","preventDefault","userCredentials","emailSignInStart","Create","hiddenUsr","setHiddenUsr","hiddenPwdConfirm","setHiddenPwdConfirm","shifrPwd","setShifrPwd","shifrPwdConfirm","setShifrPwdConfirm","history","useHistory","pwdMatchSuccess","checkName","checkEmail","checkPwd","notValidEmail","submitCheck","setSubmitCheck","refUsrCont","refEmailCont","refPwdCont","refPwdConfirmCont","refUsrInpt","refEmailInpt","refPwdInpt","refPwdConfirmInpt","displayName","passwordConfirm","setUserCredentials","handleInputClick","handleSubmit","test","ValidateEmail","push","handleChange","name","onSubmit","maxLength","id","progressActionsTypes","READ_USER_PROGRESS_START","WRITE_USER_PROGRESS_START","READ_USER_PROGRESS_SUCCESS","WRITE_USER_PROGRESS_SUCCESS","READ_USER_PROGRESS_FAIL","WRITE_USER_PROGRESS_FAIL","PROGRESS_TRACKING","ERROR_TRACKING","TIME_TRACKING","PROGRESS_REFRESH","CUSTOM_TEXT_ADD","SAVE_PROGRESS","FETCH_POEM_START","FETCH_POEM_FINISH","FETCH_POEM_ERROR","FETCH_POEM","progressRefresh","saveProgress","selectProgress","progress","selectCurrentProgress","selectCurrentErrors","errors","selectCustomText","customText","selectIsLoading","CustomButton","children","props","disabled","inverted","isGoogleSignIn","overlay","apply","Menu","message","setMessage","err","setErr","Object","entries","poet","title","time","errorsAll","values","reduce","prev","sortedArr","sort","a","b","sortedErrors","forEach","item","newObj","key","val","assign","Math","floor","toString","wpm","textAlign","color","marginBottom","sec","date","Date","setSeconds","toISOString","substr","getTime","renderArr","renderStatistics","opacity","navigator","clipboard","readText","then","text","customTextAddAction","replace","Reading","setProgress","startTime","setStartTime","input","setInput","charColor","setCharColor","setText","charRef","textBeforRef","lastProgress","keyFilter","getFinalResults","finalTime","now","wordCount","split","handleKeyDown","includes","txtChar","progressTracking","addEventListener","removeEventListener","currentChar","slice","textBefor","textAfter","background","textManipulations","App","fetchRef","exact","path","render","component","INITIAL_STATE","progressReducer","action","author","userReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","fetchPoemStart","onFetchPoemStart","progressSagas","takeLatest_any","takeLatest","axios","get","response","random","data","content","put","console","all","call","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","exists","createdDate","set","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getSnapshotFromUserAuth","signInWithGoogle","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","onEmailSignInStart","onGoogleSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","userSagas","userSnapShot","signInWithPopup","Promise","resolve","reject","unsubscribe","onAuthStateChanged","createUserWithEmailAndPassword","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","getElementById"],"mappings":"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","file":"static/js/main.8e03c45f.chunk.js","sourcesContent":["const userActionsTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\n  GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n  FACEBOOK_SIGN_IN_START: 'FACEBOOK_SIGN_IN_START',\n  EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n  SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n  CHECK_USER_SESSION_START: 'CHECK_USER_SESSION_START',\n  CHECK_USER_SESSION_FINISH: 'CHECK_USER_SESSION_FINISH',\n  SIGN_OUT_START: 'SIGN_OUT_START',\n  SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n  SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n  SIGN_UP_START: 'SIGN_UP_START',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE',\n};\n\nexport default userActionsTypes;\n","import userActionsTypes from './user.types';\n\nexport const googleSignInStart = () => ({\n  type: userActionsTypes.GOOGLE_SIGN_IN_START,\n});\n\nexport const signInSucces = (user: string) => ({\n  type: userActionsTypes.SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const signInFailure = (error: string) => ({\n  type: userActionsTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n\nexport const emailSignInStart = (userCredentials: any) => ({\n  type: userActionsTypes.EMAIL_SIGN_IN_START,\n  payload: userCredentials,\n});\n\nexport const checkUserSession = () => ({\n  type: userActionsTypes.CHECK_USER_SESSION_START,\n});\n\nexport const checkUserSessionFinish = () => ({\n  type: userActionsTypes.CHECK_USER_SESSION_FINISH,\n});\n\nexport const signOutStart = () => ({\n  type: userActionsTypes.SIGN_OUT_START,\n});\n\nexport const signOutSuccess = () => ({\n  type: userActionsTypes.SIGN_OUT_SUCCESS,\n});\n\nexport const signOutFailure = (error: string) => ({\n  type: userActionsTypes.SIGN_OUT_FAILURE,\n  payload: error,\n});\n\nexport const signUpStart = (userData: any) => ({\n  type: userActionsTypes.SIGN_UP_START,\n  payload: userData,\n});\n\nexport const signUpSuccess = () => ({\n  type: userActionsTypes.SIGN_UP_SUCCESS,\n});\n\n//export const signUpFailure = (error: string) => ({\n//type: userActionsTypes.SIGN_UP_FAILURE,\n//payload: error,\n//})\n","import { createSelector } from 'reselect';\n\nconst selectUser = (state: any) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n);\n\nexport const userAuthificationLoaded = createSelector(\n  [selectUser],\n  (user) => user.isLoading\n);\n","import './spinner.style.scss';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  emailSignInStart,\n  googleSignInStart,\n} from '../redux/user/user.actions';\nimport './Login.style.scss';\nimport { userAuthificationLoaded } from '../redux/user/user.selectors';\nimport Spinner from './spinner.component';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [hiddenEmail, setHiddenEmail] = useState(true);\n  const [hiddenPwd, setHiddenPwd] = useState(true);\n  const [shifr, setShifr] = useState('');\n\n  const cursorEvent: any = useRef();\n  const refEmailContainer: any = useRef();\n  const refPwdContainer: any = useRef();\n  const refEmailInput: any = useRef();\n  const refPwdInput: any = useRef();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(userAuthificationLoaded);\n\n  // *** focuses first input on component did mount\n  useEffect(() => {\n    refEmailInput.current?.focus();\n  }, []);\n\n  // *** sets focus and blinking on input click event\n  const handleClick = (e: any) => {\n    if (e.target === refEmailContainer.current) {\n      refEmailInput.current?.focus();\n      setHiddenEmail(!hiddenEmail);\n      setHiddenPwd(true);\n    } else {\n      refPwdInput.current?.focus();\n      setHiddenPwd(!hiddenPwd);\n      setHiddenEmail(true);\n    }\n  };\n\n  // *** turns password to a shifr\n  useEffect(() => {\n    setShifr('*'.repeat(password.length));\n  }, [password]);\n\n  // *** sets blinking cursor to the first input\n  useEffect(() => {\n    if (\n      document.activeElement === ReactDOM.findDOMNode(refEmailInput.current)\n    ) {\n      cursorEvent.current = setInterval(\n        () => setHiddenEmail(!hiddenEmail),\n        500\n      );\n    }\n    return () => {\n      clearInterval(cursorEvent.current);\n    };\n  });\n\n  // *** sets blinking cursor to the second input\n  useEffect(() => {\n    if (document.activeElement === ReactDOM.findDOMNode(refPwdInput.current)) {\n      cursorEvent.current = setInterval(() => setHiddenPwd(!hiddenPwd), 500);\n    }\n    return () => {\n      clearInterval(cursorEvent.current);\n    };\n  });\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    if (email || password) {\n      const userCredentials = { email, password };\n      dispatch(emailSignInStart(userCredentials));\n    }\n  };\n\n  const googleSignIn = (e: any) => {\n    e.preventDefault();\n    dispatch(googleSignInStart());\n  };\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\"login container\">\n          <h1 className=\"header\">\n            <span className=\"sign\">{'_> '}</span>Welcome.\n          </h1>\n          <p className=\"info\">\n            This application was designed to teach you the touch typing, while\n            you enjoy reading your favorite book. The project is non-commercial\n            and open source. For the further information please visit{' '}\n            <a\n              className=\"source-link\"\n              href=\"https://github.com/devCote/Type-Reader\"\n            >\n              github source-code\n            </a>\n            . Application keeps your privacy and does not share with other 3rd\n            parties. Enjoy your time!\n          </p>\n          <form className=\"form\">\n            <div\n              ref={refEmailContainer}\n              onClick={(e) => handleClick(e)}\n              className=\"cmd1\"\n            >\n              <div className=\"span\">{'Email >  '}</div>\n              <span className=\"span1\">{email}</span>\n              <div\n                className=\"cursor1\"\n                style={\n                  hiddenEmail\n                    ? { visibility: 'hidden' }\n                    : { visibility: 'visible' }\n                }\n              ></div>\n              <input\n                required\n                autoComplete=\"off\"\n                minLength={4}\n                ref={refEmailInput}\n                className=\"input1\"\n                type=\"text\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n              />\n            </div>\n            <div\n              ref={refPwdContainer}\n              onClick={(e) => handleClick(e)}\n              className=\"cmd2\"\n            >\n              <div className=\"span\">{'Password >  '}</div>\n              <span className=\"span2\">{shifr}</span>\n              <div\n                style={\n                  hiddenPwd\n                    ? { visibility: 'hidden' }\n                    : { visibility: 'visible' }\n                }\n                className=\"cursor2\"\n              ></div>\n              <input\n                required\n                autoComplete=\"off\"\n                ref={refPwdInput}\n                minLength={8}\n                type=\"text\"\n                className=\"input2\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n              />\n            </div>\n            <div className=\"button\">\n              <Link to=\"/\" className=\"menu-link\">\n                <button type=\"submit\" onClick={handleSubmit} className=\"login\">\n                  login\n                </button>\n              </Link>\n              <Link to=\"/create\" className=\"create-link\">\n                <button>new user</button>\n              </Link>\n            </div>\n            <div className=\"button2\">\n              <button className=\"google\" onClick={googleSignIn}>\n                google\n              </button>\n              <button className=\"facebook\">facebook</button>\n            </div>\n          </form>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { signUpStart } from '../redux/user/user.actions';\nimport './Create.style.scss';\n\nconst Create = () => {\n  const [hiddenUsr, setHiddenUsr] = useState(true);\n  const [hiddenEmail, setHiddenEmail] = useState(true);\n  const [hiddenPwd, setHiddenPwd] = useState(true);\n  const [hiddenPwdConfirm, setHiddenPwdConfirm] = useState(true);\n  const [shifrPwd, setShifrPwd] = useState('');\n  const [shifrPwdConfirm, setShifrPwdConfirm] = useState('');\n  const history = useHistory();\n\n  const [submitCheck, setSubmitCheck] = useState({\n    pwdMatchSuccess: true,\n    checkName: true,\n    checkEmail: true,\n    checkPwd: true,\n    notValidEmail: true,\n  });\n\n  const {\n    pwdMatchSuccess,\n    checkName,\n    checkPwd,\n    checkEmail,\n    notValidEmail,\n  } = submitCheck;\n\n  const cursorEvent: any = useRef();\n  const refUsrCont: any = useRef();\n  const refEmailCont: any = useRef();\n  const refPwdCont: any = useRef();\n  const refPwdConfirmCont: any = useRef();\n  const refUsrInpt: any = useRef();\n  const refEmailInpt: any = useRef();\n  const refPwdInpt: any = useRef();\n  const refPwdConfirmInpt: any = useRef();\n\n  const dispatch = useDispatch();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n  });\n\n  const { displayName, email, password, passwordConfirm } = userCredentials;\n\n  // *** focuses first input on component did mount\n  useEffect(() => {\n    refUsrInpt.current?.focus();\n  }, []);\n\n  // *** sets focus and blinking on input click event\n  const handleInputClick = (e: any) => {\n    if (e.target === refUsrCont.current) {\n      refUsrInpt.current?.focus();\n      setHiddenUsr(!hiddenUsr);\n      setHiddenPwd(true);\n      setHiddenPwdConfirm(true);\n      setHiddenEmail(true);\n    } else if (e.target === refPwdCont.current) {\n      refPwdInpt.current?.focus();\n      setHiddenPwd(!hiddenPwd);\n      setHiddenUsr(true);\n      setHiddenPwdConfirm(true);\n      setHiddenEmail(true);\n    } else if (e.target === refPwdConfirmCont.current) {\n      refPwdConfirmInpt.current?.focus();\n      setHiddenPwdConfirm(!hiddenPwdConfirm);\n      setHiddenUsr(true);\n      setHiddenPwd(true);\n      setHiddenEmail(true);\n    } else {\n      refEmailInpt.current?.focus();\n      setHiddenPwdConfirm(true);\n      setHiddenUsr(true);\n      setHiddenPwd(true);\n      setHiddenEmail(!hiddenEmail);\n    }\n  };\n\n  // *** turns password to a shifr\n  useEffect(() => {\n    setShifrPwd('*'.repeat(password.length));\n    setShifrPwdConfirm('*'.repeat(passwordConfirm.length));\n  }, [password, passwordConfirm]);\n\n  // *** sets blinking cursor to the name input\n  useEffect(() => {\n    if (document.activeElement === ReactDOM.findDOMNode(refUsrInpt.current))\n      cursorEvent.current = setInterval(() => setHiddenUsr(!hiddenUsr), 500);\n    return () => {\n      clearInterval(cursorEvent.current);\n    };\n  });\n\n  // *** sets blinking cursor to the email input\n  useEffect(() => {\n    if (document.activeElement === ReactDOM.findDOMNode(refEmailInpt.current))\n      cursorEvent.current = setInterval(\n        () => setHiddenEmail(!hiddenEmail),\n        500\n      );\n    return () => {\n      clearInterval(cursorEvent.current);\n    };\n  });\n\n  // *** sets blinking cursor to the pass input\n  useEffect(() => {\n    if (document.activeElement === ReactDOM.findDOMNode(refPwdInpt.current))\n      cursorEvent.current = setInterval(() => setHiddenPwd(!hiddenPwd), 500);\n    return () => {\n      clearInterval(cursorEvent.current);\n    };\n  });\n\n  // *** sets blinking cursor to the pass confirm input\n  useEffect(() => {\n    if (\n      document.activeElement === ReactDOM.findDOMNode(refPwdConfirmInpt.current)\n    )\n      cursorEvent.current = setInterval(\n        () => setHiddenPwdConfirm(!hiddenPwdConfirm),\n        500\n      );\n    return () => {\n      clearInterval(cursorEvent.current);\n    };\n  });\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    if (!displayName)\n      return setSubmitCheck({\n        checkName: false,\n        checkPwd: true,\n        pwdMatchSuccess: true,\n        checkEmail: true,\n        notValidEmail: true,\n      });\n\n    if (!email)\n      return setSubmitCheck({\n        checkName: true,\n        checkEmail: false,\n        checkPwd: true,\n        pwdMatchSuccess: true,\n        notValidEmail: true,\n      });\n\n    if (!password || !passwordConfirm)\n      return setSubmitCheck({\n        checkName: true,\n        checkEmail: true,\n        checkPwd: false,\n        pwdMatchSuccess: true,\n        notValidEmail: true,\n      });\n\n    if (password !== passwordConfirm)\n      return setSubmitCheck({\n        checkName: true,\n        checkEmail: true,\n        checkPwd: true,\n        pwdMatchSuccess: false,\n        notValidEmail: true,\n      });\n\n    if (!ValidateEmail(email))\n      return setSubmitCheck({\n        checkName: true,\n        checkEmail: true,\n        checkPwd: true,\n        pwdMatchSuccess: true,\n        notValidEmail: false,\n      });\n\n    setSubmitCheck({\n      checkName: true,\n      checkEmail: true,\n      checkPwd: true,\n      pwdMatchSuccess: true,\n      notValidEmail: true,\n    });\n\n    const credentials = { displayName, password, email };\n    dispatch(signUpStart(credentials));\n    history.push('/');\n  };\n\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"login container\">\n      <h1 className=\"header\">\n        <span className=\"sign\">{'_> '}</span>Create.\n      </h1>\n      <p className=\"info\">\n        Please enter your credentials to create a new user account.\n      </p>\n      <form onSubmit={(e) => handleSubmit(e)} className=\"form\">\n        <div\n          ref={refUsrCont}\n          onClick={(e) => handleInputClick(e)}\n          className=\"cmd1\"\n        >\n          <div className=\"span\">{'Name >  '}</div>\n          <span className=\"span1\">{displayName}</span>\n          <div\n            className=\"cursor1\"\n            style={\n              hiddenUsr ? { visibility: 'hidden' } : { visibility: 'visible' }\n            }\n          ></div>\n          <input\n            required\n            autoComplete=\"off\"\n            minLength={4}\n            maxLength={16}\n            ref={refUsrInpt}\n            className=\"input1\"\n            type=\"text\"\n            name=\"displayName\"\n            onChange={handleChange}\n            value={displayName}\n          />\n        </div>\n        <div\n          ref={refEmailCont}\n          onClick={(e) => handleInputClick(e)}\n          className=\"cmd1\"\n        >\n          <div className=\"span\">{'Email >  '}</div>\n          <span className=\"span1\">{email}</span>\n          <div\n            className=\"cursor1\"\n            style={\n              hiddenEmail ? { visibility: 'hidden' } : { visibility: 'visible' }\n            }\n          ></div>\n          <input\n            required\n            type=\"email\"\n            autoComplete=\"off\"\n            minLength={4}\n            maxLength={26}\n            ref={refEmailInpt}\n            className=\"input1\"\n            name=\"email\"\n            onChange={handleChange}\n            value={email}\n          />\n        </div>\n        <div\n          ref={refPwdCont}\n          onClick={(e) => handleInputClick(e)}\n          className=\"cmd2\"\n        >\n          <div className=\"span\">{'Pwd >  '}</div>\n          <span className=\"span2\">{shifrPwd}</span>\n          <div\n            style={\n              hiddenPwd ? { visibility: 'hidden' } : { visibility: 'visible' }\n            }\n            className=\"cursor2\"\n          ></div>\n          <input\n            required\n            autoComplete=\"off\"\n            ref={refPwdInpt}\n            minLength={8}\n            type=\"text\"\n            className=\"input2\"\n            name=\"password\"\n            onChange={handleChange}\n            value={password}\n          />\n        </div>\n        <div\n          ref={refPwdConfirmCont}\n          onClick={(e) => handleInputClick(e)}\n          className=\"cmd3\"\n        >\n          <div className=\"span\">{'Pwd again >  '}</div>\n          <span className=\"span3\">{shifrPwdConfirm}</span>\n          <div\n            style={\n              hiddenPwdConfirm\n                ? { visibility: 'hidden' }\n                : { visibility: 'visible' }\n            }\n            className=\"cursor3\"\n          ></div>\n          <input\n            required\n            autoComplete=\"off\"\n            ref={refPwdConfirmInpt}\n            minLength={8}\n            type=\"text\"\n            className=\"input3\"\n            name=\"passwordConfirm\"\n            onChange={handleChange}\n            value={userCredentials.passwordConfirm}\n          />\n        </div>\n        {pwdMatchSuccess ? null : <p id=\"info-fail\">Password doesn't match</p>}\n        {checkName ? null : <p id=\"info-fail\">Please enter your name</p>}\n        {checkEmail ? null : <p id=\"info-fail\">Please enter your email</p>}\n        {notValidEmail ? null : (\n          <p id=\"info-fail\">Please enter your email correctly</p>\n        )}\n        {checkPwd ? null : <p id=\"info-fail\">Please enter your password</p>}\n        <div className=\"button\" id=\"create-user-btn\">\n          <Link to=\"/\">\n            <button\n              onClick={(e) => handleSubmit(e)}\n              type=\"submit\"\n              className=\"login\"\n            >\n              Submit\n            </button>\n          </Link>\n          <Link to=\"/\">\n            <button className=\"return\">Return</button>\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nfunction ValidateEmail(email: string) {\n  if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n    return true;\n  }\n  return false;\n}\n\nexport default Create;\n","const progressActionsTypes = {\n  READ_USER_PROGRESS_START: 'READ_USER_PROGRESS_START',\n  WRITE_USER_PROGRESS_START: 'WRITE_USER_PROGRESS_START',\n  READ_USER_PROGRESS_SUCCESS: 'READ_USER_PROGRESS_SUCCESS',\n  WRITE_USER_PROGRESS_SUCCESS: 'WRITE_USER_PROGRESS_SUCCESS',\n  READ_USER_PROGRESS_FAIL: 'READ_USER_PROGRESS_FAIL',\n  WRITE_USER_PROGRESS_FAIL: 'WRITE_USER_PROGRESS_FAIL',\n  PROGRESS_TRACKING: 'PROGRESS_TRACKING',\n  ERROR_TRACKING: 'ERROR_TRACKING',\n  TIME_TRACKING: 'TIME_TRACKING',\n  PROGRESS_REFRESH: 'PROGRESS_REFRESH',\n  CUSTOM_TEXT_ADD: 'CUSTOM_TEXT_ADD',\n  SAVE_PROGRESS: 'SAVE_PROGRESS',\n  FETCH_POEM_START: 'FETCH_POEM_START',\n  FETCH_POEM_FINISH: 'FETCH_POEM_FINISH',\n  FETCH_POEM_ERROR: 'FETCH_POEM_ERROR',\n  FETCH_POEM: 'FETCH_POEM',\n};\n\nexport default progressActionsTypes;\n","import progressActionsTypes from './progress.types';\n\nexport const progressTracking = (progress: number) => ({\n  type: progressActionsTypes.PROGRESS_TRACKING,\n  payload: progress,\n});\n\nexport const progressRefresh = () => ({\n  type: progressActionsTypes.PROGRESS_REFRESH,\n});\n\n//export const saveUserProgress = (\n//userAuth: any,\n//progress: number,\n//time: number,\n//wpm: number,\n//errors: object\n//) => {};\n\nexport const customTextAddAction = (text: string) => ({\n  type: progressActionsTypes.CUSTOM_TEXT_ADD,\n  payload: text,\n});\n\nexport const saveProgress = (payload: object) => ({\n  type: progressActionsTypes.SAVE_PROGRESS,\n  payload: payload,\n});\n\nexport const errorTracking = (error: object) => ({\n  type: progressActionsTypes.ERROR_TRACKING,\n  payload: error,\n});\n\nexport const fetchPoemStart = () => ({\n  type: progressActionsTypes.FETCH_POEM_START,\n});\n\nexport const fetchPoemFinish = () => ({\n  type: progressActionsTypes.FETCH_POEM_FINISH,\n});\n\nexport const fetchPoemError = () => ({\n  type: progressActionsTypes.FETCH_POEM_ERROR,\n});\n\nexport const fetchPoem = (data: object) => ({\n  type: progressActionsTypes.FETCH_POEM,\n  payload: data,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectProgress = (state: any) => state.progress;\n\nexport const selectCurrentProgress = createSelector(\n  [selectProgress],\n  (state) => state.progress\n);\n\nexport const selectCurrentErrors = createSelector(\n  [selectProgress],\n  (state) => state.errors\n);\n\nexport const selectCustomText = createSelector(\n  [selectProgress],\n  (state) => state.customText\n);\n\nexport const selectIsLoading = createSelector(\n  [selectProgress],\n  (state) => state.isLoading\n);\n","import './custom-button.style.scss';\n\ninterface Props {\n  inverted?: boolean;\n  isGoogleSignIn?: boolean;\n  apply?: boolean;\n  overlay?: boolean;\n  children?: React.ReactNode;\n  onClick?: any;\n  type?: any;\n  className?: string;\n  component?: any;\n  ref?: any;\n  disabled?: any;\n}\n\nconst CustomButton: React.FC<Props> = ({\n  onClick,\n  type,\n  children,\n  className,\n  disabled,\n  ...props\n}) => (\n  <button\n    type={type}\n    onClick={onClick}\n    className={`${className} ${props?.inverted ? 'inverted' : ''} ${\n      props?.isGoogleSignIn ? 'google-sign-in' : ''\n    } ${props?.overlay ? 'overlay' : ''} ${\n      props?.apply ? 'apply' : ''\n    } custom-button`}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  customTextAddAction,\n  fetchPoemStart,\n  progressRefresh,\n} from '../redux/progress/progress.actions';\nimport {\n  selectCurrentErrors,\n  selectProgress,\n} from '../redux/progress/progress.selectors';\nimport { signOutStart } from '../redux/user/user.actions';\nimport { selectCurrentUser } from '../redux/user/user.selectors';\nimport CustomButton from './custom-button.component';\nimport './Menu.style.scss';\n\nconst Menu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectCurrentUser);\n  const errors = useSelector(selectCurrentErrors);\n  const progress = useSelector(selectProgress);\n  const [message, setMessage] = useState(`Hello ${user.displayName}`);\n  const [err, setErr] = useState({});\n\n  /* eslint-disable */\n  const paste = () => {\n    dispatch(progressRefresh());\n    navigator.clipboard.readText().then((text) =>\n      dispatch(\n        customTextAddAction(\n          text\n            .replace(/[\\n\\r]+/g, ' ')\n            .replace(/[\\…]+/g, ':')\n            .replace(/[\\“\\”]+/g, '\"')\n            .replace(/[\\’]+/g, \"'\")\n            .replace(/\\s+/g, ' ')\n        )\n      )\n    );\n    setMessage('Your text has been loaded');\n  };\n\n  /* eslint-enable */\n  const getTime = (sec: number) => {\n    const date = new Date(0);\n    date.setSeconds(sec); // specify value for SECONDS here\n    const timeString = date.toISOString().substr(11, 8);\n    return timeString;\n  };\n\n  useEffect(() => {\n    if (Object.entries(progress.poet).length)\n      setMessage(`${progress.poet.name} - \"${progress.poet.title}\"`);\n    if (progress.time === 0) return;\n    setMessage('');\n    setErr(errors);\n    const errorsAll: any = Object.values(errors).reduce(\n      (prev: any, value: any) => {\n        return prev + value;\n      },\n      0\n    );\n    const sortedArr = [];\n    for (let value in errors) {\n      sortedArr.push([value, errors[value]]);\n    }\n    sortedArr.length = 10;\n    sortedArr.sort(function (a, b) {\n      return b[1] - a[1];\n    });\n    const sortedErrors: any = {};\n    sortedArr.forEach(function (item) {\n      sortedErrors[item[0]] = item[1];\n    });\n    const newObj: any = {};\n    for (let [key, value] of Object.entries(sortedErrors)) {\n      const val: any = value;\n      Object.assign(newObj, {\n        [key]: Math.floor((val / errorsAll) * 100).toString() + '%',\n      });\n    }\n    setErr(newObj);\n  }, [errors, progress.time, progress.customText, progress.poet]);\n\n  const renderStatistics = () => {\n    const renderArr: any = [];\n    for (let [key, value] of Object.entries(err)) {\n      const val: any = value;\n      renderArr.push(\n        <tr key={key}>\n          <td className=\"\">{key}</td>\n          <td className=\"\">{val}</td>\n        </tr>\n      );\n    }\n    return renderArr;\n  };\n\n  const fetchPoem = () => {\n    dispatch(progressRefresh());\n    dispatch(fetchPoemStart());\n    setMessage('random poem loaded');\n  };\n\n  return (\n    <div className=\"menu-container\">\n      {progress.time ? (\n        <div className=\"stats-container\">\n          {progress.wpm ? (\n            <p\n              style={{ textAlign: 'center', color: 'red', marginBottom: '5px' }}\n            >\n              Words per minute: {progress.wpm}\n            </p>\n          ) : null}\n          <p\n            style={{ textAlign: 'center', color: 'green', marginBottom: '5px' }}\n          >\n            time: {getTime(Math.floor(progress.time))}\n          </p>\n          {Object.entries(errors).length > 0 ? (\n            <table>\n              <tbody>\n                <tr>\n                  <th>Button</th>\n                  <th>Mistakes</th>\n                </tr>\n                {renderStatistics()}\n              </tbody>\n            </table>\n          ) : (\n            <p\n              style={{\n                marginBottom: '5px',\n                color: 'white',\n                opacity: 0.7,\n                textAlign: 'center',\n              }}\n            >\n              No mistakes\n            </p>\n          )}\n        </div>\n      ) : null}\n      {message ? <p className=\"welcome-message\">{message}</p> : null}\n      <Link to=\"/reading\">\n        <CustomButton>Start</CustomButton>\n      </Link>\n      <CustomButton onClick={paste}>Paste From Clipboard</CustomButton>\n      <CustomButton onClick={fetchPoem}>Random Poem</CustomButton>\n      <Link to=\"/\">\n        <CustomButton disabled>Statistics</CustomButton>\n      </Link>\n      <CustomButton onClick={() => dispatch(signOutStart())}>\n        Log Off\n      </CustomButton>\n    </div>\n  );\n};\n\nexport default Menu;\n","/* eslint-disable */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {\n  errorTracking,\n  progressTracking,\n  saveProgress,\n} from '../redux/progress/progress.actions';\nimport {\n  selectCurrentErrors,\n  selectCurrentProgress,\n  selectCustomText,\n} from '../redux/progress/progress.selectors';\nimport './Reading.style.scss';\n\nconst Reading = () => {\n  const [progress, setProgress] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [input, setInput] = useState('');\n  const [charColor, setCharColor] = useState('black');\n  const [text, setText] = useState(\n    \"As with many techniques in JavaScript, it's mainly a matter of taste when deciding which one to use.\"\n  );\n\n  const charRef: any = useRef();\n  const textBeforRef: any = useRef();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const lastProgress = useSelector(selectCurrentProgress);\n  const customText = useSelector(selectCustomText);\n  const errors = useSelector(selectCurrentErrors);\n\n  const keyFilter = ['Alt', 'Control', 'Shift', 'Tab', 'Meta', 'CapsLock'];\n\n  const getFinalResults = () => {\n    const finalTime = (Date.now() - startTime) / 1000;\n    const wordCount = textBeforRef.current?.className?.split(' ').length;\n    const wpm = finalTime >= 60 ? Math.floor((wordCount * 60) / finalTime) : 0;\n\n    return {\n      time: finalTime,\n      wpm: wpm,\n    };\n  };\n\n  const handleKeyDown = (e: any) => {\n    e.preventDefault();\n    if (e.key === 'Escape') {\n      dispatch(saveProgress(getFinalResults()));\n      return history.push('/');\n    }\n    if (!keyFilter.includes(e.key)) {\n      setInput(e.key);\n    }\n  };\n\n  const setTimer = () => {\n    if (startTime) return;\n    setStartTime(Date.now());\n  };\n\n  useEffect(() => {\n    if (!input) return;\n    let txtChar: any = charRef.current.className;\n\n    setTimer();\n\n    if (text.length === progress + 1) {\n      dispatch(saveProgress(getFinalResults()));\n      history.push('/');\n    }\n    if (txtChar === input) {\n      setCharColor('black');\n      setProgress(progress + 1);\n      setInput('');\n      dispatch(progressTracking(progress));\n    } else {\n      setCharColor('red');\n      txtChar =\n        charRef.current.className === ' ' ? 'Space' : charRef.current.className;\n      const newObj = { ...errors, [txtChar]: errors[txtChar] + 1 || 1 };\n      dispatch(errorTracking(newObj));\n    }\n  }, [input, progress]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    if (lastProgress) setProgress(lastProgress);\n    if (customText) setText(customText);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  const textManipulations = (text: string, progress: number) => {\n    const currentChar = text.slice(progress, progress + 1);\n    const textBefor = text.slice(0, progress);\n    const textAfter = text.slice(progress + 1, text.length);\n\n    return (\n      <React.Fragment>\n        <span ref={textBeforRef} className={textBefor}>\n          {textBefor}\n        </span>\n        <span\n          ref={charRef}\n          className={currentChar}\n          style={{ color: `${charColor}`, background: '#20C20E' }}\n        >\n          {currentChar}\n        </span>\n        <span style={{ opacity: 0.5 }}>{textAfter}</span>\n      </React.Fragment>\n    );\n  };\n  return (\n    <div className=\"text-container\">\n      <p className=\"text\">{textManipulations(text, progress)}</p>\n    </div>\n  );\n};\n\nexport default Reading;\n","import { Switch, Route } from 'react-router-dom';\nimport Login from './components/Login.component';\nimport Create from './components/Create.component';\nimport './App.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\nimport React, { useEffect, useRef } from 'react';\nimport Menu from './components/Menu.component';\nimport Reading from './components/Reading.component';\nimport Spinner from './components/spinner.component';\nimport { selectIsLoading } from './redux/progress/progress.selectors';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const isLoading = useSelector(selectIsLoading);\n\n  const fetchRef = useRef(() => {\n    dispatch(checkUserSession());\n  });\n\n  useEffect(() => fetchRef.current(), []);\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact\n              path={'/'}\n              render={() => (currentUser ? <Menu /> : <Login />)}\n            />\n            <Route exact path={'/create'} component={Create} />\n            <Route\n              exact\n              path={'/reading'}\n              render={() => (currentUser ? <Reading /> : <Login />)}\n            />\n          </Switch>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import progressActionsTypes from './progress.types';\n\nconst INITIAL_STATE = {\n  progress: 0,\n  error: null,\n  isLoading: false,\n  customText: '',\n  time: 0,\n  errors: {},\n  wpm: 0,\n  poet: {},\n};\n\nconst progressReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case progressActionsTypes.READ_USER_PROGRESS_START:\n    case progressActionsTypes.WRITE_USER_PROGRESS_START:\n      return {\n        ...state,\n      };\n    case progressActionsTypes.FETCH_POEM_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case progressActionsTypes.FETCH_POEM_FINISH:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case progressActionsTypes.FETCH_POEM:\n      return {\n        ...state,\n        customText: action.payload.text,\n        poet: { name: action.payload.author, title: action.payload.title },\n      };\n    case progressActionsTypes.PROGRESS_TRACKING:\n      return {\n        ...state,\n        progress: action.payload,\n      };\n    case progressActionsTypes.ERROR_TRACKING:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n    case progressActionsTypes.PROGRESS_REFRESH:\n      return {\n        ...state,\n        progress: 0,\n        errors: {},\n        time: 0,\n        wpm: 0,\n      };\n    case progressActionsTypes.CUSTOM_TEXT_ADD:\n      return {\n        ...state,\n        customText: action.payload,\n      };\n    case progressActionsTypes.SAVE_PROGRESS:\n      return {\n        ...state,\n        time: action.payload.time,\n        wpm: action.payload.wpm,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default progressReducer;\n","import userActionsTypes from './user.types';\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null,\n  isLoading: false,\n};\n\n//interface Act {\n//type: string;\n//payload: object;\n//}\n\nconst userReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case userActionsTypes.SIGN_UP_START:\n    case userActionsTypes.GOOGLE_SIGN_IN_START:\n    case userActionsTypes.EMAIL_SIGN_IN_START:\n    case userActionsTypes.FACEBOOK_SIGN_IN_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case userActionsTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isLoading: false,\n        error: null,\n      };\n    case userActionsTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        currentUser: null,\n        error: null,\n      };\n    case userActionsTypes.SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        error: null,\n      };\n\n    case userActionsTypes.SIGN_IN_FAILURE:\n    case userActionsTypes.SIGN_OUT_FAILURE:\n    case userActionsTypes.SIGN_UP_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    case userActionsTypes.CHECK_USER_SESSION_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case userActionsTypes.CHECK_USER_SESSION_FINISH:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport progressReducer from './progress/progress.reducer';\nimport userReducer from './user/user.reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['progress'],\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  progress: progressReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import axios from 'axios';\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { fetchPoem, fetchPoemError, fetchPoemFinish } from './progress.actions';\nimport progressActionsTypes from './progress.types';\n\nconst takeLatest_any: any = takeLatest;\n\nexport function* fetchPoemStart() {\n  try {\n    const response: { data: any } = yield axios.get(\n      'https://www.poemist.com/api/v1/randompoems'\n    );\n    const random = Math.floor(Math.random() * 6);\n\n    /* eslint-disable */\n    const text = response.data[random].content\n      .replace(/[\\n\\r]+/g, ' ')\n      .replace(/[\\…]+/g, ':')\n      .replace(/[\\“\\”]+/g, '\"')\n      .replace(/[\\’]+/g, \"'\")\n      .replace(/\\s+/g, ' ');\n    /* eslint-enable */\n    yield put(\n      fetchPoem({\n        text,\n        title: response.data[random].title,\n        author: response.data[random].poet.name,\n      })\n    );\n  } catch (error: any) {\n    yield put(fetchPoemError());\n    console.error(error.message);\n  }\n  yield put(fetchPoemFinish());\n}\n\nexport function* onFetchPoemStart() {\n  yield takeLatest_any(progressActionsTypes.FETCH_POEM_START, fetchPoemStart);\n}\n\nexport function* progressSagas() {\n  yield all([call(onFetchPoemStart)]);\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firebase-firestore';\nimport 'firebase/firebase-auth';\n\nconst config = {\n  apiKey: 'AIzaSyDMeJRJ1mGAdH92f1-n-3kFU8PUAEWSXyM',\n  authDomain: 'type-reader.firebaseapp.com',\n  projectId: 'type-reader',\n  storageBucket: 'type-reader.appspot.com',\n  messagingSenderId: '1033621232370',\n  appId: '1:1033621232370:web:af1edb69a19d3edb58ce6b',\n};\n\nexport const updateFirestoreUserProgress = async (\n  userAuth: any,\n  progress: number,\n  time: number,\n  wpm: number,\n  errors: object\n) => {\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  try {\n    await userRef.update({\n      progress,\n      time,\n      errors,\n    });\n  } catch (error: any) {\n    console.error(error.message);\n  }\n};\n\nexport const createUserProfileDocument = async (\n  userAuth: any,\n  additionalData: any\n) => {\n  if (!userAuth) return console.error('createUserProfileDocument: !userAuth');\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdDate = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdDate,\n        ...additionalData,\n      });\n    } catch (error: any) {\n      console.error('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const app = firebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;\n","import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../firebase/firebase';\nimport { Response } from '../response.interface';\nimport {\n  checkUserSessionFinish,\n  signInFailure,\n  signInSucces,\n  signOutSuccess,\n  signUpSuccess,\n} from './user.actions';\nimport userActionsTypes from './user.types';\n\nconst takeLatest_any: any = takeLatest;\n\nexport function* getSnapshotFromUserAuth(userAuth: any) {\n  try {\n    const userRef: Response = yield call(\n      createUserProfileDocument,\n      userAuth,\n      {}\n    );\n    const userSnapShot: Response = yield userRef.get();\n    yield put(signInSucces({ id: userSnapShot.id, ...userSnapShot.data() }));\n  } catch (error) {\n    yield put(signInFailure('error'));\n    console.error('something went wrong!');\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure('error'));\n    console.error('something went wrong!');\n  }\n}\n\nexport function* signInWithEmailAndPassword({\n  payload: { email, password },\n}: any) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure('error'));\n    console.error('something went wrong!');\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth: Response = yield getCurrentUser();\n    if (!userAuth) yield put(checkUserSessionFinish());\n    yield getSnapshotFromUserAuth(userAuth);\n    yield put(checkUserSessionFinish());\n  } catch (error) {\n    yield put(signInFailure('error'));\n    console.error('something went wrong!');\n    yield put(checkUserSessionFinish());\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signInFailure('error'));\n    console.error('something went wrong!');\n  }\n}\n\ninterface Data {\n  payload: {\n    email: string;\n    password: string;\n    displayName: string;\n  };\n}\n\nexport function* signUp(data: Data) {\n  try {\n    const {\n      payload: { displayName, password, email },\n    } = data;\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, { displayName });\n    yield put(signUpSuccess());\n    yield signInWithEmailAndPassword(data);\n  } catch (error) {\n    yield put(signInFailure('error'));\n    console.error('something went wrong!');\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest_any(\n    userActionsTypes.EMAIL_SIGN_IN_START,\n    signInWithEmailAndPassword\n  );\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest_any(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest_any(\n    userActionsTypes.CHECK_USER_SESSION_START,\n    isUserAuthenticated\n  );\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest_any(userActionsTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest_any(userActionsTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n  ]);\n}\n","import { all, call } from 'redux-saga/effects';\n\nimport { progressSagas } from './progress/progress.sagas';\nimport { userSagas } from './user/user.sagas';\n\nexport default function* rootSaga() {\n  yield all([call(userSagas), call(progressSagas)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root_reducer';\nimport rootSaga from './root_saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: any = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}